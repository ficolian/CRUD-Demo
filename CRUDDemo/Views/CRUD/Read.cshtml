@model PagedList.IPagedList<CRUDDemo.mstEmployee>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Read";
}

<h2>Read</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@*@using (Html.BeginForm("Read", "CRUDController", FormMethod.Get))*@
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="employeeName" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Read">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <tr>
        <th>
            NIK
        </th>
        <th>
            Employee Name
        </th>
        <th>
            Employee Address
        </th>
        <th>
            Married Status
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NIK)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MarriedStatus)
            </td>
            <td>
                @Html.ActionLink("Update", "Update", new { Id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { Id = item.Id })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Read",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
<br />
